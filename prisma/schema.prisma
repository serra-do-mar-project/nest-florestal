generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model autoinfracao {
  id               Int     @id @default(autoincrement())
  data_emissao     DateTime @db.Timestamp(6)
  cpf              String  @db.VarChar(191)
  lat              Int
  lon              Int
  id_exemplocaso   Int
  descricao        String  @db.VarChar(191)
  fiscal           fiscal  @relation(fields: [cpf], references: [cpf], onDelete: Cascade)
  exemplocaso      exemplocaso @relation(fields: [id_exemplocaso], references: [id], onDelete: Cascade)
  
  // Campo e relação adicionados para o relatoriodiario
  relatoriodiarioId Int?
  relatoriodiario   relatoriodiario? @relation(fields: [relatoriodiarioId], references: [id])
}

model exemplocaso {
  id              Int            @id @default(autoincrement())
  nome_resumo     String?        @db.VarChar(100)
  nome_completo   String         @db.VarChar(255)
  palavra_chave   String?        @db.VarChar(255)
  categoria       String         @db.VarChar(100)
  tipo_ocorrencia String?        @db.VarChar(100)
  tags            String?        @db.VarChar(255)
  proc_op         String         @db.VarChar(191)
  proc_adm        String         @db.VarChar(191)
  enq_pen         String         @db.VarChar(191)
  enq_adm         String         @db.VarChar(191)
  modelo          String         @db.Text
  campos          String?        @db.Text
  autoinfracao    autoinfracao[]
}

model fiscal {
  id              Int      @id
  cpf             String   @unique @db.VarChar(191) // Adicionado @unique para garantir que o cpf seja uma chave única para a relação
  nome            String   @db.VarChar(191)
  senha           String   @db.VarChar(191)
  tipo            tipo_usuario
  autoinfracao    autoinfracao[]
  
  // Relação adicionada para relatoriodiario
  relatoriodiario relatoriodiario[]
}

enum Equipe {
  charlie_sede_diurno
  charlie_rp_diurno
  charlie_rp_noturno
  delta_sede_diurno
  delta_rp_diurno
  delta_rp_noturno
}

enum Origem {
  rotina
  planejamento_SIMUC
  dejem_SIMUC
  denuncia
  atendimento_orgaos_externos
  demanda_soliitacao_inerna
}

enum Municipios {
  caraguatatuba
  paraibuna
  natividade_da_serra
}

enum Setores {
  caraguatatuba_norte
  caraguatatuba_sul
  alto_da_serra_norte
  alto_da_serra_sul
}

enum TipoAcao {
  incursao_viatura
  incrusao_pe
  fiscalizacao_embarcada
  sobrevoo
  fiscalizacao_drone
  bloqueio
}

enum TipoVeiculoAbordado {
  carro
  moto
  caminhao
  onibusVan
}
enum tipo_usuario {
  administrador
  fiscal
}
model relatoriodiario {
  id                                 Int      @id @default(autoincrement())
  equipe                             Equipe
  equipe_em_atuacao                  String
  orgaos_e_instituicoes_envolvadas   String
  responsavel                        String
  data_hora_inicio_acao              DateTime
  data_hora_termino_acao             DateTime
  origem                             Origem
  registro_ocorrencia                Boolean
  area_fiscalizada                   Boolean
  municipios                         Municipios
  setores                            Setores
  especificacao_local                String
  relatorio                          String
  outras_atividades                  String
  cordenadas                         String
  placa_vtr                          String?
  km_inicio                          Int?
  km_final                           Int?
  condicoes_vtr                      String?
  tipo_acao                          TipoAcao
  veiculos_aborados                  String?
  tipo_veiculo_aborado               TipoVeiculoAbordado?
  descricao_veiculos                 String?
  km_percorrido                      Int
  horas                              Int
  processado                         Boolean  @default(false)
  
  // Relação com autoinfracao (um relatório para muitos autos)
  autoinfracao                       autoinfracao[]
  
  // Campos e relação adicionados para fiscal (muitos relatórios para um fiscal)
  fiscalId                           Int
  fiscal                             fiscal @relation(fields: [fiscalId], references: [id])
}
